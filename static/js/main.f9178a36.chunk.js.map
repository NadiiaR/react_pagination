{"version":3,"sources":["utils.ts","App.tsx","components/Pagination/Pagination.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","ValueSelect","Pagination","total","perItems","perPage","onPageChange","currentPage","Math","ceil","prevPage","nextPage","at","className","cn","disabled","href","onClick","map","item","isActive","active","items","totalItems","length","App","useState","TEN","itemsPerPage","setItemsPerPage","selectedPage","setSelectedPage","startVisibleItem","endVisibleItem","min","id","value","onChange","event","target","THREE","FIVE","TWENTY","htmlFor","page","slice","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,ICGEG,E,uBCCEC,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAGMC,EAAcZ,EAAW,EADXa,KAAKC,KAAKN,EAAQC,IAEhCM,EAAWH,EAAY,KAAOF,EAC9BM,EAAWJ,EAAYK,IAAI,KAAOP,EAcxC,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUL,IAA3C,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QApBe,WACjBZ,IAAYE,EAAY,IAC1BD,EAAaD,EAAU,IAarB,oBAWDE,EAAYW,KAAI,SAACC,GAChB,IAAMC,EAAWD,IAASd,EAE1B,OACE,oBAEEQ,UAAWC,IAAG,YAAa,CAAEO,OAAQD,IAFvC,SAIE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KATEA,MAeX,oBAAIN,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA9Ce,WACjBZ,IAAYE,EAAYK,IAAI,IAC9BN,EAAaD,EAAU,IAuCrB,wBD/DFiB,EAAkB3B,EAAW,EAAG,IACnCuB,KAAI,SAAAnB,GAAC,qBAAYA,MACdwB,EAAaD,EAAME,Q,SAEdvB,O,iBAAAA,I,eAAAA,I,cAAAA,I,qBAAAA,M,KAOJ,IAAMwB,EAAgB,WAC3B,MAAwCC,mBAASzB,EAAY0B,KAA7D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCH,mBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAAoBF,EAAeF,EAAgBA,EACnDK,EAAiBzB,KAAK0B,IAAIF,EAAmBJ,EAAcL,GAajE,OACE,sBAAKV,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWiB,EADX,mBACkCE,EAAmB,EADrD,cAC4DC,EAD5D,eACiFX,EAAME,OADvF,OAIA,sBAAKX,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOR,EACPS,SA1BgB,SAACC,GACzBT,GAAiBS,EAAMC,OAAOH,OAC9BL,EAAgB,IAmBV,UAOE,wBAAQK,MAAOnC,EAAYuC,MAA3B,SAAmCvC,EAAYuC,QAC/C,wBAAQJ,MAAOnC,EAAYwC,KAA3B,SAAkCxC,EAAYwC,OAC9C,wBAAQL,MAAOnC,EAAY0B,IAA3B,SAAiC1B,EAAY0B,MAC7C,wBAAQS,MAAOnC,EAAYyC,OAA3B,SAAoCzC,EAAYyC,cAIpD,uBAAOC,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOoB,EACPnB,SAAUwB,EACVvB,QAASyB,EACTxB,aAvCmB,SAACsC,GACpBA,IAASd,GACXC,EAAgBa,MAwChB,6BACGtB,EACEuB,MAAMb,EAAkBC,GACxBf,KAAI,SAAAC,GAAI,OACP,oBACE,UAASA,EADX,SAIGA,GAFIA,YE1EnB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f9178a36.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\nconst totalItems = items.length;\n\nconst enum ValueSelect {\n  THREE = 3,\n  FIVE = 5,\n  TEN = 10,\n  TWENTY = 20,\n}\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(ValueSelect.TEN);\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const startVisibleItem = (selectedPage * itemsPerPage) - itemsPerPage;\n  const endVisibleItem = Math.min(startVisibleItem + itemsPerPage, totalItems);\n\n  const handleSelectItems = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setSelectedPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    if (page !== selectedPage) {\n      setSelectedPage(page);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${startVisibleItem + 1} - ${endVisibleItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleSelectItems}\n          >\n            <option value={ValueSelect.THREE}>{ValueSelect.THREE}</option>\n            <option value={ValueSelect.FIVE}>{ValueSelect.FIVE}</option>\n            <option value={ValueSelect.TEN}>{ValueSelect.TEN}</option>\n            <option value={ValueSelect.TWENTY}>{ValueSelect.TWENTY}</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perItems={itemsPerPage}\n        perPage={selectedPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items\n          .slice(startVisibleItem, endVisibleItem)\n          .map(item => (\n            <li\n              data-cy={item}\n              key={item}\n            >\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number, // total number of items to paginate\n  perPage: number, // optional with 1 by default\n  perItems: number, // number of items per page\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perItems,\n  perPage,\n  onPageChange,\n}) => {\n  const amountPages = Math.ceil(total / perItems);\n  const currentPage = getNumbers(1, amountPages);\n  const prevPage = currentPage[0] === perPage;\n  const nextPage = currentPage.at(-1) === perPage;\n\n  const handlePrevPage = () => {\n    if (perPage !== currentPage[0]) {\n      onPageChange(perPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (perPage !== currentPage.at(-1)) {\n      onPageChange(perPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: prevPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={prevPage}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {currentPage.map((item) => {\n        const isActive = item === perPage;\n\n        return (\n          <li\n            key={item}\n            className={cn('page-item', { active: isActive })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={() => onPageChange(item)}\n            >\n              {item}\n            </a>\n          </li>\n        );\n      })}\n\n      <li className=\"page-item\">\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}